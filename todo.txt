git@heroku.com:growing-mist-751.git
TODO:
FIXME:   
CHANGED:  

Tasks 
x Make javascript widget work   
x	iframe should open link in popup window 
x	after popup window closes, iframe window should refresh
x	when logging in through embed, devise should redirect to a callback that closes window on success
x	create url model
x	make url model a resource of site site/1/url/index
x add remoteurl/1/reviews
x redirect after logout 
x Make light css embed version
x Create view for loggedin + remoteurl 404
x Alter remoteurl/1 to have loggedin, logged out version 
x install audiojs.zip
x Make nonexistant urls @ site/1/remote/jones-is-the-latest-blog work
x Checks for site/1/jones in content
x If jones doesn't exist > create    
x Pull profile pictures from services > render yaml or https://github.com/intridea/omniauth/wiki/Auth-Hash-Schema
x  - Add autofill user info (depending on login service)  
x If possible Fill out required profile info using omniauth callback
x Integrate twilio record call controller/function
  x Copy paste recording controller into app
  x Get recording function working
x Finalize recordings columns
x Add finalized fields (and require them) to user model / New / Edit
x  - Company, Job Title, Email, Phone (pulls from auth if avail), Location?, twitter account?, description, image, webpages?
x Cleanup how devise views look: edit, sign_in
x Data in remoteurl_id needs to be standardized somehow    
x Cleanup "leave review" frame
x Switch reviews to recordings in frame.html
x Make IFRAME have loggedin/out modes
  x Add popup link to settings in IFRAME > When loggedin
  x Add Profile_pic when logged in 
x make current pic dynamic no user pic found revert to outline
x Add tweet popup           
x Make "Showing 12 reviews" work / or no reviews
x Make show/hide synopsis / text work show transcript if synopsis nil wrap in <div class=text>
x Make user/edit in RegistrationsController redirect to force close window 
x Make "start call" form redirect to something not weird
x Make how to leave perfect review popup
x Prevent people from deleting user account (_full_lanyard fails on user delete)
x Make embed's auto resize
  x slider version
  x regular version
x Give css unique ID's to prevent interference
  x change all css to .avouch-css-class from .class
  - Make sure clear files clear everything / Figure out how to keep css separate
  - create mixin for slider   
    x slider
  x regular: Use class based reset(finish this up and standardize to slider) 
- Make JS/JQuery non-conflict with parent pages  
! Make permalinks work for site model
   - No spaces allowed when creating site
% Current method of creating Remoteurls
  - Finds IFRAME SHOW /remoteurl/"sight id no spaces" (in permalink field) if can't find it, it creates permalink "sight_id_no_spaces" and redirects to permalink
  - Display ""
! Create "banner" version  
    x Design mockup banner
    - Create banner_Embed.js
    - Create _banner_full_lanyard
    - Create banner_embed layout
    - Create banner_embed test frame

! Add regex cleaning and authentication
  - signup: clean name on new user account
  - signup: require phone #
- Create VAR url > in embed code so a domain can tag multiple index.html pages
% Create simple sales page (ala freshdesk)
  - home, tour, pricing, signup, blog, about, support
  - static example review
% Create user Dashboard       
% Get with john on launch/redis
- Add ability to add auth models from settings popup 
- Add linkedin login
- Add share / like popups           
% Prevent crossdomain tomfoolery: Parse url using javascript to determine url matches id, create whitelist feature 

? Add multiple social logins during second step of registration
? Create admin users with separate registration requirements
      
Not needed for launch
  - Save css into field per site       
  ! Make logout happen within iframe (nopopup required)
  - Allow code based invite for high-profile People/Email addresses
  ? Add recording in progress state
  ? Add recording finished state
  ? convert site to mongoid 
  ?	Pair javascript/partial to list items and poll/push refresh them
  ? Let each site have its own list of required fields
  ? Semi anonymous posting
Long term
 smartphone app
 resume site
 
#	Turn site/1/remoteurl/1 into the primary iframe
#	  Unloggedin state
#    	show.html > logged out
#    	  click to popup login > done
#    	  login to leave your review > done
#  	  show.html > logged in
#        click to logout
#        example review
#        start review button
#  Make site/1/remoteurl/1/reviews display on plugin
#    display remoteurl/1/reviews/index 
#	create all routes/pages on rails
#	head
#		log in
#		start post page
#		edit post settings 
#	list                
#		All reviews
#  	vouch.com/site/17/page/12?layout=embed&version=forum 
#		Single review
#		vouch.com/site/17/page/12/post/32?layout=embed&version=forum

# Structure
#  div > replace > vouchframe > OnTrigger reload
#  iframe > Login, Submit review > Click to login           
#  div:replace > vouch reviews > poll for changes
#  load partial w/ reviews
# 
# 
# Current    
# frame .html
#  gets embed.js
#    has JS code
#    gets full_lanyard passes version type
#      full_lanyard processes version type & shows static iframe auth?layout=embed link 
#        login opens window trying to access protected "closewindow" page
#    find/replaces div sw_3 with content from full_lanyard      
# 
# New    
# frame .html
#  gets embed.js
#    has JS code
# 1.  gets full_lanyard passes site.id, remoteurl.id, layout?=type
#      full_lanyard processes version type & shows static iframe auth?layout=embed link 
#        login opens window trying to access protected "closewindow" page
#    find/replaces div sw_3 with content from full_lanyard
# 2.  gets site.id/remoteurl.id/reviews, layout?=type
#    find/replaces div "something" with content from reviews
# 
# 
#    
# 
# DOM
# -Load Widget w/ javascript
# -Load popup window
# -First registration > Add relevant info (email address)
# -After successful login 
# - Callback should change on page DOM to Logout / Start Review
# - Callback should close iframe   
# 
#   
# //Code for permalinks:
# //Site.all.each do |c|
#   match "#{c.permalink}/edit" => 'sites#edit', :permalink => c.permalink 
#   match "#{c.permalink}(/:site)" => 'sites#show', :permalink => c.permalink
# end
# 
# //Site.find_by_permalink(params[:permalink]) 

